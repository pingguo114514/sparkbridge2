name: Build and Release

on:
  push:
    branches:
      - main  # 或者你使用的其他分支

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Generate version number
        id: version
        run: |
          # 获取当前版本号
          version=$(node -e "console.log(require('./package.json').version)")
          # 自动递增版本号
          IFS='.' read -r -a version_parts <<< "$version"
          version_parts[2]=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "New version: $new_version"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Update package.json version
        run: |
          npm version ${{ env.VERSION }} --no-git-tag-version
          git add package.json
          git commit -m "chore: update version to ${{ env.VERSION }}"
          git push

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Release notes for ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/
          asset_name: build-artifacts.zip
          asset_content_type: application/zip